# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to not include the .idea directory, if present.
.idea/

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Django specific
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
/static/
/staticfiles/
/media/

# Django migrations (uncomment if you want to ignore migrations)
# */migrations/*
# !*/migrations/__init__.py

# Django secret key and sensitive settings
.env
.env.local
.env.production
.env.staging
secret_key.txt

# Redis dump file
dump.rdb

# Node.js (for frontend assets)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
yarn.lock

# TailwindCSS
/assets/css/tailwind.css
.django_tailwind_cli/

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Restaurant specific files
# Backup files
*.bak
*.backup
backup_*.sql

# Log files
error.log
access.log
debug.log

# Vendor uploads
vendor_logos/*.jpg
vendor_logos/*.png
vendor_logos/*.gif
vendor_banners/*.jpg
vendor_banners/*.png
vendor_banners/*.gif

# Menu item images (keep sample images, ignore uploaded ones)
menu_items/*.jpg
menu_items/*.png
menu_items/*.gif
!menu_items/sample_*

# Test data and temporary test files
test_orders_*.json
temp_*.py
scratch_*.py

# IDE and editor files
*.pyc
*.pyo
*.pyd
.Python
.idea/
.vscode/
*.sublime-*
.atom/

# Virtual environment
venv/
env/
ENV/
.venv/

# Local configuration overrides
local_config.py
production_settings.py
staging_settings.py

# SSL certificates
*.pem
*.key
*.crt
*.csr

# Database backups
*.sql
*.dump

# Redis snapshots
*.rdb

# Supervisor configuration (if used in production)
supervisord.log
supervisord.pid

# Nginx/Apache logs (if stored in project)
*.access.log
*.error.log

# Docker
Dockerfile.local
docker-compose.override.yml
.dockerignore

# Kubernetes
k8s-local/
*.yaml.local

# Monitoring and profiling
.profile
*.prof

# Development tools
.coverage
htmlcov/
.pytest_cache/

# Restaurant business files
financial_reports/
customer_data/
vendor_contracts/

# Additional Django project files
*.pid
celerybeat-schedule
celerybeat.pid

# Server logs
server.log
*.access.log
*.error.log

# Development files
debug_*.html
temp_*.html

# Local development overrides
*.local
settings_local.py

# Deployment files
deploy.sh
fabfile.py

# Cache files
.cache/
cache/

# Session files
django_sessions/

# Webpack/Build artifacts (if using frontend build tools)
dist/
build/
webpack-stats.json

# QR codes and generated files
qr_codes/
generated_qr/

# Backup directories
backups/
db_backups/

# Local testing files
test_*.py
test_data/
fixtures/local_*

# Production secrets
.secrets/
secrets.json
